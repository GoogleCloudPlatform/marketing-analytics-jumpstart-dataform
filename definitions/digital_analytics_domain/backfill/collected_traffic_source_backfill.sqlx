/*
* Copyright 2024 Google LLC
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*     https://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

config {
    type: "operations",
}

MERGE
  ${ref(functions.baseSchema("ga4"), "event")} T
USING
  (
  SELECT
    e.event_id,
    ct.collected_traffic_source_id
  FROM (
    SELECT
      event_id,
      ${ga4.eventUniqueColumns}
    FROM
      ${ref(functions.baseSchema("ga4"), "event")}
    WHERE
      collected_traffic_source_id IS NULL ) e
  LEFT JOIN (SELECT * FROM ${ref("ga4_events")}) g_e
  ON ${sql.multiColumnEqualsClause('e', 'g_e', ga4.eventUniqueColumns)}
  LEFT JOIN (SELECT * FROM ${ref(functions.baseSchema("ga4"), "collected_traffic_source")} ) ct
  ON ${sql.multiColumnEqualsClause('g_e', 'ct', ga4.collectedTrafficSourceUniqueColumns)}
  GROUP BY e.event_id, ct.collected_traffic_source_id
  ) S
ON T.event_id = S.event_id
WHEN MATCHED THEN
UPDATE SET collected_traffic_source_id = S.collected_traffic_source_id
