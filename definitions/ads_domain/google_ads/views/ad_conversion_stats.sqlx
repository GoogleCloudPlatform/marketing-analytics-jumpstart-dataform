/*
 * Copyright 2023 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
config { 
  type: "view",
  schema: functions.baseSchema("ads"),
  tags: ["ads"]
}
js {
  const lookbackDays = dataform.projectConfig.vars.ads_metrics_lookback_days;
  
  const columns = 
    `ad_group_ad_ad_id,
    customer_id,
    campaign_id,
    ad_group_ad_ad_group,
    segments_date,
    segments_device,
    segments_conversion_action_category,
    segments_conversion_action_name,
    metrics_conversions_value,
    metrics_conversions`;
    
  const union = functions.buildViewUnion(columns, "ads", "p_ads_AdConversionStats", lookbackDays);
}
SELECT
  "GOOGLE_ADS" AS ad_system,
  CAST(ad_group_ad_ad_id AS STRING) AS creative_id,
  CAST(customer_id AS STRING) AS account_id,
  CAST(campaign_id AS STRING) AS campaign_id,
  SPLIT(ad_group_ad_ad_group,'/')[ORDINAL(4)] AS adgroup_id, --extract ad_group_id from ad_group string
  CAST(CAST(segments_date AS STRING FORMAT 'YYYYMMDD') AS INT64) AS date_id,
  segments_device AS device,
  segments_conversion_action_category AS ad_conversion_type,
  segments_conversion_action_name AS ad_conversion_name,
  SUM(CAST(metrics_conversions_value AS NUMERIC)) AS value, --cast to numeric for currency
  SUM(metrics_conversions) AS quantity
FROM (
SELECT DISTINCT * FROM (
  ${union}
)
)
GROUP BY
  creative_id,
  account_id,
  campaign_id,
  adgroup_id,
  date_id,
  device,
  ad_conversion_type,
  ad_conversion_name